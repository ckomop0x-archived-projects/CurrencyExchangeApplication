{"version":3,"sources":["config.js","helpers/api.js","helpers/pow.js","helpers/currencyConverter.js","helpers/inputFilter.js","components/Bar.js","components/CurrencyLine/index.js","components/DropdownSelector.js","components/CurrencySelector/index.js","components/Footer/index.js","components/App.js","index.js","registerServiceWorker.js"],"names":["config","API_KEY","DELAY","URL","fetchApi","options","axios","method","url","headers","Content-Type","pow","x","n","result","i","currencyConverter","currencyOne","arguments","length","undefined","currencyTwo","value","floor","Math","inputFilter","line","currencyMask","currencyMaskWithDot","test","exec","Bar","react_default","a","createElement","MuiThemeProvider_default","muiTheme","getMuiTheme","AppBar_default","title","showMenuIconButton","style","textAlign","background","CurrencyLine","props","className","margin","width","boxSizing","floatingLabelText","onChange","TextField_default","type","DropdownSelector","currenciesNames","currency","handleChange","currenciesRates","Object","keys","map","currenciesRate","push","MenuItem_default","key","primaryText","DropDownMenu_default","spanStyle","height","lineHeight","verticalAlign","display","CurrencySelector","handleChangeOne","handleChangeTwo","currencyOneValue","currencyTwoValue","components_DropdownSelector","Footer","time","concat","moment","format","fontWeight","currentYear","href","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","seconds","_this2","then","data","setState","rates","dataTimestamp","timestamp","catch","error","errorText","message","setInterval","err","event","_this$state","inputValue","target","_this$state2","index","_this$state3","Date","getFullYear","components_Bar","components_CurrencySelector","bind","components_CurrencyLine","changeCurrencyOneValue","changeCurrencyTwoValue","components_Footer","Component","ReactDOM","render","src_components_App","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log"],"mappings":"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","file":"static/js/main.9579f862.chunk.js","sourcesContent":["const config = {\n    API_KEY: '2926cc269ba74564be3c4488db03cfb3',\n    DELAY: 3000000,\n    URL: 'https://openexchangerates.org/api/latest.json?app_id='\n};\n\nexport default config;\n","import axios from 'axios';\n\nconst fetchApi = (options) => axios({\n    method: options.method, // api method\n    url: options.url,  // api URL\n    headers: {'Content-Type': 'application/json'}\n});\n\nexport default fetchApi;","export default function pow (x, n) {\n    let result = x;\n\n    for (let i = 1; i < n; i += 1) {\n        result *= x;\n    }\n    return result;\n}\n","import pow from '../helpers/pow';\n\nexport default function currencyConverter (currencyOne = 1, currencyTwo = 1, value = 1, floor = 2) {\n    return Math.floor(((value * (currencyTwo / currencyOne)) * pow(10, floor))) / pow(10, floor);\n};","const inputFilter = (value = '') => {\n    let line = '';\n    const currencyMask = /(?!0)(?:\\d+)?(?:\\.)?(?:\\d)?(?:\\d)/;\n    const currencyMaskWithOne = /(?!0)(?:\\d+)(?:\\.)(?:\\d)/;\n    const currencyMaskWithDot = /(?!0)(?:\\d+)(?:\\.)/;\n\n    if (currencyMaskWithDot.test(value) && !currencyMaskWithOne.test(value)) {\n        line = currencyMaskWithDot.exec(value);\n    } else if (currencyMask.test(value)) {\n        line = currencyMask.exec(value);\n    }\n    return line;\n};\n\nexport default inputFilter;","import React from 'react';\nimport AppBar from 'material-ui/AppBar';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nconst Bar = () => {\n  return (\n    <MuiThemeProvider muiTheme={getMuiTheme()}>\n      <AppBar\n        title=\"Exchange your Currency\"\n        showMenuIconButton={false}\n        style={{\n          textAlign: 'center',\n          background: '#004d9a'\n        }}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default Bar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {style} from 'typestyle';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport TextField from 'material-ui/TextField';\n\nconst CurrencyLine = (props) => {\n    const className = style({\n        margin: 20,\n        width: '90% !important',\n        boxSizing: 'border-box'\n    });\n    const {floatingLabelText, value, onChange} = props;\n\n    return (\n        <MuiThemeProvider muiTheme={getMuiTheme()}>\n            <TextField className={className}\n                       floatingLabelText={floatingLabelText}\n                       type=\"text\"\n                       value={value}\n                       onChange={onChange}/>\n        </MuiThemeProvider>\n    );\n};\n\nCurrencyLine.propTypes = {\n    floatingLabelText: PropTypes.string,\n    value: PropTypes.node,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default CurrencyLine;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DropDownMenu from 'material-ui/DropDownMenu';\nimport MenuItem from 'material-ui/MenuItem';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nconst DropdownSelector = (props) => {\n    const currenciesNames = [];\n    const {currency, handleChange, currenciesRates} = props;\n    if (currenciesRates && Object.keys(currenciesRates)) {\n        Object.keys(currenciesRates).map((currenciesRate) => {\n            currenciesNames.push(\n                <MenuItem key={currenciesRate}\n                          value={currenciesRate}\n                          primaryText={currenciesRate}/>\n            );\n\n            return currenciesNames;\n        });\n    }\n    \n    return (\n        <MuiThemeProvider muiTheme={getMuiTheme()}>\n            <DropDownMenu value={currency} onChange={handleChange}>\n                {currenciesNames}\n            </DropDownMenu>\n        </MuiThemeProvider>\n    );\n};\n\nDropdownSelector.propTypes = {\n    currency: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    rates: PropTypes.object\n};\n\nexport default DropdownSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {style} from 'typestyle';\nimport DropdownSelector from '../DropdownSelector';\nimport currencyConverter from '../../helpers/currencyConverter';\n\nconst className = style({\n    width: '320px',\n    margin: 'auto',\n    textAlign: 'center'\n});\nconst spanStyle = style({\n    height: '60px',\n    lineHeight: '60px',\n    verticalAlign: 'top',\n    display: 'inline-block'\n});\n\nconst CurrencySelector = (props) => {\n    const {\n        currencyOne,\n        currencyTwo,\n        handleChangeOne,\n        handleChangeTwo,\n        currencyOneValue,\n        currencyTwoValue,\n        currenciesRates\n    } = props;\n\n    return (\n        <div className={className}>\n            <DropdownSelector\n                currenciesRates={currenciesRates}\n                currency={currencyOne}\n                handleChange={handleChangeOne}\n                currencyOneValue={currencyOneValue}\n                currencyTwoValue={currencyTwoValue}/>\n            <span className={spanStyle}>\n\t\t\t\t{currenciesRates && currencyConverter(currenciesRates[currencyOne], currenciesRates[currencyTwo], 1, 4)}\n\t\t\t</span>\n            <DropdownSelector\n                currenciesRates={currenciesRates}\n                currency={currencyTwo}\n                handleChange={handleChangeTwo}\n                currencyOneValue={currencyOneValue}\n                currencyTwoValue={currencyTwoValue}/>\n        </div>\n    );\n};\n\nCurrencySelector.propTypes = {\n    currencyOne: PropTypes.string,\n    currencyOneValue: PropTypes.node,\n    currencyTwo: PropTypes.string,\n    currencyTwoValue: PropTypes.node,\n    handleChangeOne: PropTypes.func,\n    handleChangeTwo: PropTypes.func,\n    rates: PropTypes.object\n};\n\nexport default CurrencySelector;\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n    return (\n        <div>\n            <div style={{textAlign: 'center', margin: 20}}>\n                {props.time && `Currencies rates timestamp: ${moment(props.time * 1000).format('Do MMM YYYY, h:mm a')}`}\n            </div>\n            <div style={{textAlign: 'center', margin: 20, fontWeight: 'bold'}}>\n                &copy; {props.currentYear} <a href=\"https://github.com/ckomop0x\">Pavel Klochkov</a>\n            </div>\n        </div>\n    );\n};\n\nFooter.propTypes = {\n    time: PropTypes.number,\n    currentYear: PropTypes.number\n};\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport config from '../config';\nimport './App.css';\nimport fetchApi from '../helpers/api';\nimport currencyConverter from '../helpers/currencyConverter';\nimport inputFilter from '../helpers/inputFilter';\nimport Bar from './Bar';\nimport CurrencyLine from './CurrencyLine/index';\nimport CurrencySelector from './CurrencySelector';\nimport Footer from './Footer';\n\nclass App extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            seconds: 0,\n            currencyOne: 'EUR',\n            currencyTwo: 'USD',\n            currencyOneValue: '',\n            currencyTwoValue: '',\n        };\n    }\n\n    componentDidMount () {\n        const options = {method: 'GET', url: `${config.URL}${config.API_KEY}`};\n\n        fetchApi(options).then((data) => {\n            this.setState({\n                currenciesRates: data.data.rates,\n                dataTimestamp: data.data.timestamp\n            });\n        }).catch((error) => {\n            this.setState({\n                error: true,\n                errorText: 'Can\\'t connect',\n                message: `${error}`\n            });\n        });\n\n        setInterval(() => {\n            fetchApi(options).then((result) => {\n                this.setState({\n                    currenciesRates: result.data.rates\n                });\n            }).catch((err) => {\n                this.setState({\n                    error: true,\n                    errorText: 'Can\\'t connect',\n                    message: `${err}`\n                });\n            });\n            this.setState({seconds: this.state.seconds + 30});\n        }, config.DELAY);\n    }\n\n    changeCurrencyOneValue (event) {\n        const {currencyOne, currencyTwo, currenciesRates} = this.state;\n        const inputValue = event.target.value;\n\n        this.setState({\n            currencyOneValue: inputFilter(inputValue),\n            currencyTwoValue: currencyConverter(\n                currenciesRates[currencyOne], currenciesRates[currencyTwo], inputFilter(inputValue)\n            )\n        });\n    }\n\n    changeCurrencyTwoValue (event) {\n        const {currencyOne, currencyTwo, currenciesRates} = this.state;\n        const inputValue = event.target.value;\n\n        this.setState({\n            currencyTwoValue: inputFilter(inputValue),\n            currencyOneValue: currencyConverter(\n                currenciesRates[currencyTwo], currenciesRates[currencyOne], inputFilter(inputValue)\n            )\n        });\n    }\n\n    handleChangeOne (event, index, value) {\n        this.setState({\n            currencyOne: value,\n            currencyOneValue: '',\n            currencyTwoValue: ''\n        });\n    }\n\n    handleChangeTwo (event, index, value) {\n        this.setState({\n            currencyTwo: value,\n            currencyOneValue: '',\n            currencyTwoValue: ''\n        });\n    }\n\n    render () {\n        const {\n            currencyOne,\n            currencyTwo,\n            currencyOneValue,\n            currencyTwoValue,\n            currenciesRates,\n            dataTimestamp\n        } = this.state;\n        const nowTime = new Date();\n        const currentYear = nowTime.getFullYear();\n\n        return (\n            <div className=\"container\">\n                <div className=\"App\">\n                    <Bar/>\n                    <CurrencySelector currencyOne={currencyOne}\n                                      currencyTwo={currencyTwo}\n                                      currencyOneValue={currencyOneValue}\n                                      currencyTwoValue={currencyTwoValue}\n                                      currenciesRates={currenciesRates}\n                                      handleChangeOne={this.handleChangeOne.bind(this)}\n                                      handleChangeTwo={this.handleChangeTwo.bind(this)}/>\n                    <CurrencyLine floatingLabelText={currencyOne}\n                                  value={currencyOneValue}\n                                  onChange={this.changeCurrencyOneValue.bind(this)}/>\n                    <CurrencyLine floatingLabelText={currencyTwo}\n                                  value={currencyTwoValue}\n                                  onChange={this.changeCurrencyTwoValue.bind(this)}/>\n                    <Footer time={dataTimestamp} currentYear={currentYear}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register () {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            navigator.serviceWorker\n                .register(swUrl)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.');\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.');\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error);\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}